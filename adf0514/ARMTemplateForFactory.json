{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "adf0514"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"ChicagoCrimes_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ChicagoCrimes'"
		},
		"Crimes_NewTable_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Crimes_NewTable'"
		},
		"AzureSqlAdventureWorksLT2017_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlAdventureWorksLT2017'"
		},
		"AzureSqlAdventureWorksDW2017_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlAdventureWorksDW2017'"
		},
		"CrimesFileSink_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "NewCrimeReport.csv"
		},
		"CrimesFileSink_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "blob0514"
		},
		"cityofchicago_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.cityofchicago.org/resource/crimes.json"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Sabermetrics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SaberMetrics",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SaberMetrics",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"batting": {},
									"players": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SaberMetrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/updateCrimesFact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "getLastUpdateDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(date) as MaxDate From ChicagoCrimes"
							},
							"dataset": {
								"referenceName": "CrimesFact",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set LastDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getLastUpdateDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LastDate",
							"value": {
								"value": "@activity('getLastUpdateDate').output.firstRow.MaxDate",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GetLatestReport",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set LastDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "HttpSource",
								"httpRequestTimeout": "00:01:40"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ChicagoCrimesSODA",
								"type": "DatasetReference",
								"parameters": {
									"LastDate": {
										"value": "@variables('LastDate')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CrimesFileSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transform New Reports",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "GetLatestReport",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transform New Reports",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"NewCrimesFile": {},
									"NewCrimesTable": {}
								}
							},
							"staging": {}
						}
					}
				],
				"variables": {
					"LastDate": {
						"type": "String",
						"defaultValue": "01/01/2001"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CrimesFact')]",
				"[concat(variables('factoryId'), '/datasets/ChicagoCrimesSODA')]",
				"[concat(variables('factoryId'), '/datasets/CrimesFileSink')]",
				"[concat(variables('factoryId'), '/dataflows/Transform New Reports')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ChicagoCrimesSODA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cityofchicago",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LastDate": {
						"type": "string",
						"defaultValue": "01/01/2001"
					}
				},
				"annotations": [],
				"type": "HttpFile",
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "arrayOfObjects"
					},
					"relativeUrl": {
						"value": "@concat('?$limit=1000&$order=date&$where=date>''',dataset().LastDate,'''')",
						"type": "Expression"
					},
					"requestMethod": "GET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cityofchicago')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CrimesFact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ChicagoCrimes",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Case Number",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Block",
						"type": "varchar"
					},
					{
						"name": "IUCR",
						"type": "varchar"
					},
					{
						"name": "Primary Type",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Location Description",
						"type": "varchar"
					},
					{
						"name": "Arrest",
						"type": "varchar"
					},
					{
						"name": "Domestic",
						"type": "varchar"
					},
					{
						"name": "Beat",
						"type": "varchar"
					},
					{
						"name": "District",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Ward",
						"type": "varchar"
					},
					{
						"name": "Community Area",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FBI Code",
						"type": "varchar"
					},
					{
						"name": "X Coordinate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Y Coordinate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated On",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Latitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Longitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "DateOnly",
						"type": "date"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[ChicagoCrimes]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ChicagoCrimes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CrimesFileSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\n",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('CrimesFileSink_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('CrimesFileSink_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Crimes_NewTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ChicagoCrimes",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Case Number",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "varchar"
					},
					{
						"name": "Block",
						"type": "varchar"
					},
					{
						"name": "IUCR",
						"type": "varchar"
					},
					{
						"name": "Primary Type",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Location Description",
						"type": "varchar"
					},
					{
						"name": "Arrest",
						"type": "varchar"
					},
					{
						"name": "Domestic",
						"type": "varchar"
					},
					{
						"name": "Beat",
						"type": "varchar"
					},
					{
						"name": "District",
						"type": "varchar"
					},
					{
						"name": "Ward",
						"type": "varchar"
					},
					{
						"name": "Community Area",
						"type": "varchar"
					},
					{
						"name": "FBI Code",
						"type": "varchar"
					},
					{
						"name": "X Coordinate",
						"type": "varchar"
					},
					{
						"name": "Y Coordinate",
						"type": "varchar"
					},
					{
						"name": "Year",
						"type": "varchar"
					},
					{
						"name": "Updated On",
						"type": "varchar"
					},
					{
						"name": "Latitude",
						"type": "varchar"
					},
					{
						"name": "Longitude",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Crimes_New]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ChicagoCrimes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "NewCrimeReport.csv",
						"container": "blob0514"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					},
					{
						"name": "Prop_5",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "Prop_8",
						"type": "String"
					},
					{
						"name": "Prop_9",
						"type": "String"
					},
					{
						"name": "Prop_10",
						"type": "String"
					},
					{
						"name": "Prop_11",
						"type": "String"
					},
					{
						"name": "Prop_12",
						"type": "String"
					},
					{
						"name": "Prop_13",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					},
					{
						"name": "Prop_15",
						"type": "String"
					},
					{
						"name": "Prop_16",
						"type": "String"
					},
					{
						"name": "Prop_17",
						"type": "String"
					},
					{
						"name": "Prop_18",
						"type": "String"
					},
					{
						"name": "Prop_19",
						"type": "String"
					},
					{
						"name": "Prop_20",
						"type": "String"
					},
					{
						"name": "Prop_21",
						"type": "String"
					},
					{
						"name": "Prop_22",
						"type": "String"
					},
					{
						"name": "Prop_23",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sabermetricsdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "saber.rawAgg"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sabermetricssink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "blob0514"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "playerID",
						"type": "String"
					},
					{
						"name": "yearID",
						"type": "String"
					},
					{
						"name": "stint",
						"type": "String"
					},
					{
						"name": "teamID",
						"type": "String"
					},
					{
						"name": "lgID",
						"type": "String"
					},
					{
						"name": "G",
						"type": "String"
					},
					{
						"name": "AB",
						"type": "String"
					},
					{
						"name": "R",
						"type": "String"
					},
					{
						"name": "H",
						"type": "String"
					},
					{
						"name": "2B",
						"type": "String"
					},
					{
						"name": "3B",
						"type": "String"
					},
					{
						"name": "HR",
						"type": "String"
					},
					{
						"name": "RBI",
						"type": "String"
					},
					{
						"name": "SB",
						"type": "String"
					},
					{
						"name": "CS",
						"type": "String"
					},
					{
						"name": "BB",
						"type": "String"
					},
					{
						"name": "SO",
						"type": "String"
					},
					{
						"name": "IBB",
						"type": "String"
					},
					{
						"name": "HBP",
						"type": "String"
					},
					{
						"name": "SH",
						"type": "String"
					},
					{
						"name": "SF",
						"type": "String"
					},
					{
						"name": "GIDP",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/battingblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Batting.csv",
						"container": "blob0514"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					},
					{
						"name": "Prop_5",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "Prop_8",
						"type": "String"
					},
					{
						"name": "Prop_9",
						"type": "String"
					},
					{
						"name": "Prop_10",
						"type": "String"
					},
					{
						"name": "Prop_11",
						"type": "String"
					},
					{
						"name": "Prop_12",
						"type": "String"
					},
					{
						"name": "Prop_13",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					},
					{
						"name": "Prop_15",
						"type": "String"
					},
					{
						"name": "Prop_16",
						"type": "String"
					},
					{
						"name": "Prop_17",
						"type": "String"
					},
					{
						"name": "Prop_18",
						"type": "String"
					},
					{
						"name": "Prop_19",
						"type": "String"
					},
					{
						"name": "Prop_20",
						"type": "String"
					},
					{
						"name": "Prop_21",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/playersblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "People.csv",
						"container": "blob0514"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					},
					{
						"name": "Prop_5",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "Prop_8",
						"type": "String"
					},
					{
						"name": "Prop_9",
						"type": "String"
					},
					{
						"name": "Prop_10",
						"type": "String"
					},
					{
						"name": "Prop_11",
						"type": "String"
					},
					{
						"name": "Prop_12",
						"type": "String"
					},
					{
						"name": "Prop_13",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					},
					{
						"name": "Prop_15",
						"type": "String"
					},
					{
						"name": "Prop_16",
						"type": "String"
					},
					{
						"name": "Prop_17",
						"type": "String"
					},
					{
						"name": "Prop_18",
						"type": "String"
					},
					{
						"name": "Prop_19",
						"type": "String"
					},
					{
						"name": "Prop_20",
						"type": "String"
					},
					{
						"name": "Prop_21",
						"type": "String"
					},
					{
						"name": "Prop_22",
						"type": "String"
					},
					{
						"name": "Prop_23",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ChicagoCrimes')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ChicagoCrimes_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Crimes_NewTable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Crimes_NewTable_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cityofchicago')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('cityofchicago_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SaberMetrics')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "battingblob",
								"type": "DatasetReference"
							},
							"name": "batting",
							"script": "source(output(\n\t\tplayerID as string,\n\t\tyearID as string,\n\t\tstint as short,\n\t\tteamID as string,\n\t\tlgID as string,\n\t\tG as short,\n\t\tAB as short,\n\t\tR as short,\n\t\tH as short,\n\t\t{2B} as short,\n\t\t{3B} as short,\n\t\tHR as short,\n\t\tRBI as short,\n\t\tSB as short,\n\t\tCS as short,\n\t\tBB as short,\n\t\tSO as short,\n\t\tIBB as string,\n\t\tHBP as string,\n\t\tSH as string,\n\t\tSF as string,\n\t\tGIDP as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> batting",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "playersblob",
								"type": "DatasetReference"
							},
							"name": "players",
							"script": "source(output(\n\t\tplayerID as string,\n\t\tbirthYear as string,\n\t\tbirthMonth as string,\n\t\tbirthDay as string,\n\t\tbirthCountry as string,\n\t\tbirthState as string,\n\t\tbirthCity as string,\n\t\tdeathYear as string,\n\t\tdeathMonth as short,\n\t\tdeathDay as short,\n\t\tdeathCountry as string,\n\t\tdeathState as string,\n\t\tdeathCity as string,\n\t\tnameFirst as string,\n\t\tnameLast as string,\n\t\tnameGiven as string,\n\t\tweight as short,\n\t\theight as short,\n\t\tbats as string,\n\t\tthrows as string,\n\t\tdebut as date,\n\t\tfinalGame as date,\n\t\tretroID as string,\n\t\tbbrefID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> players",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sabermetricsdb",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "AddTimestamp sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tplayerID = Agg@playerID,\n\t\tyearID = Agg@yearID,\n\t\tavgAB,\n\t\tsumBB,\n\t\tbirthYear,\n\t\tbirthMonth,\n\t\tbirthDay,\n\t\tbirthCountry,\n\t\tbirthState,\n\t\tbirthCity,\n\t\tdeathYear,\n\t\tdeathMonth,\n\t\tdeathDay,\n\t\tdeathCountry,\n\t\tdeathState,\n\t\tdeathCity,\n\t\tnameFirst,\n\t\tnameLast,\n\t\tnameGiven,\n\t\tweight,\n\t\theight,\n\t\tbats,\n\t\tthrows,\n\t\tdebut,\n\t\tfinalGame,\n\t\tretroID,\n\t\tbbrefID,\n\t\tstint,\n\t\tteamID,\n\t\tlgID,\n\t\tG,\n\t\tAB,\n\t\tR,\n\t\tH,\n\t\t{2B},\n\t\t{3B},\n\t\tHR,\n\t\tRBI,\n\t\tSB,\n\t\tCS,\n\t\tBB,\n\t\tSO,\n\t\tIBB,\n\t\tHBP,\n\t\tSH,\n\t\tSF,\n\t\tGIDP\n\t)) ~> sink1"
						}
					],
					"transformations": [
						{
							"name": "originalBattingSource",
							"script": "batting select(mapColumn(\n\t\tplayerID,\n\t\tyearID,\n\t\tstint,\n\t\tteamID,\n\t\tlgID,\n\t\tG,\n\t\tAB,\n\t\tR,\n\t\tH,\n\t\t{2B},\n\t\t{3B},\n\t\tHR,\n\t\tRBI,\n\t\tSB,\n\t\tCS,\n\t\tBB,\n\t\tSO,\n\t\tIBB,\n\t\tHBP,\n\t\tSH,\n\t\tSF,\n\t\tGIDP\n\t))~> originalBattingSource"
						},
						{
							"name": "Agg",
							"script": "batting aggregate(groupBy(playerID,\n\t\tyearID),\n\tavgAB = avg(AB),\n\t\tsumBB = sum(BB)) ~> Agg"
						},
						{
							"name": "Join1",
							"script": "Agg, playerinfoplus join(Agg@playerID+'_'+Agg@yearID == originalBattingSource@playerID+'_'+originalBattingSource@yearID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1"
						},
						{
							"name": "playerinfoplus",
							"script": "players, originalBattingSource join(players@playerID == originalBattingSource@playerID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> playerinfoplus"
						},
						{
							"name": "AddTimestamp",
							"script": "Join1 derive(currenttime = currentTimestamp()) ~> AddTimestamp"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/battingblob')]",
				"[concat(variables('factoryId'), '/datasets/playersblob')]",
				"[concat(variables('factoryId'), '/datasets/Sabermetricsdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transform New Reports')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "NewCrimesFile",
							"script": "source(output(\n\t\tarrest as string,\n\t\tbeat as string,\n\t\tblock as string,\n\t\tcase_number as string,\n\t\tcommunity_area as string,\n\t\tdate as string,\n\t\tdescription as string,\n\t\tdistrict as string,\n\t\tdomestic as string,\n\t\tfbi_code as string,\n\t\tid as string,\n\t\tiucr as string,\n\t\tlatitude as string,\n\t\tlocation_description as string,\n\t\tlongitude as string,\n\t\tprimary_type as string,\n\t\tupdated_on as string,\n\t\tward as string,\n\t\tx_coordinate as string,\n\t\ty_coordinate as string,\n\t\tyear as string,\n\t\t{location.latitude} as string,\n\t\t{location.longitude} as string,\n\t\t{location.human_address} as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tpurgeFiles: true) ~> NewCrimesFile",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Crimes_NewTable",
								"type": "DatasetReference"
							},
							"name": "NewCrimesTable",
							"script": "LocationColumn sink(input(\n\t\tID as string,\n\t\t{Case Number} as string,\n\t\tDate as string,\n\t\tBlock as string,\n\t\tIUCR as string,\n\t\t{Primary Type} as string,\n\t\tDescription as string,\n\t\t{Location Description} as string,\n\t\tArrest as string,\n\t\tDomestic as string,\n\t\tBeat as string,\n\t\tDistrict as string,\n\t\tWard as string,\n\t\t{Community Area} as string,\n\t\t{FBI Code} as string,\n\t\t{X Coordinate} as string,\n\t\t{Y Coordinate} as string,\n\t\tYear as string,\n\t\t{Updated On} as string,\n\t\tLatitude as string,\n\t\tLongitude as string,\n\t\tLocation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tID = id,\n\t\t{Case Number} = case_number,\n\t\tDate = date,\n\t\tBlock = block,\n\t\tIUCR = iucr,\n\t\t{Primary Type} = primary_type,\n\t\tDescription = description,\n\t\t{Location Description} = location_description,\n\t\tArrest = arrest,\n\t\tDomestic = domestic,\n\t\tBeat = beat,\n\t\tDistrict = district,\n\t\tWard = ward,\n\t\t{Community Area} = community_area,\n\t\t{FBI Code} = fbi_code,\n\t\t{X Coordinate} = x_coordinate,\n\t\t{Y Coordinate} = y_coordinate,\n\t\tYear = year,\n\t\t{Updated On} = updated_on,\n\t\tLatitude = latitude,\n\t\tLongitude = longitude,\n\t\tLocation = location\n\t)) ~> NewCrimesTable"
						}
					],
					"transformations": [
						{
							"name": "RemoveColumns",
							"script": "NewCrimesFile select(mapColumn(\n\t\tarrest,\n\t\tbeat,\n\t\tblock,\n\t\tcase_number,\n\t\tcommunity_area,\n\t\tdate,\n\t\tdescription,\n\t\tdistrict,\n\t\tdomestic,\n\t\tfbi_code,\n\t\tid,\n\t\tiucr,\n\t\tlatitude,\n\t\tlocation_description,\n\t\tlongitude,\n\t\tprimary_type,\n\t\tupdated_on,\n\t\tward,\n\t\tx_coordinate,\n\t\ty_coordinate,\n\t\tyear\n\t))~> RemoveColumns"
						},
						{
							"name": "LocationColumn",
							"script": "RemoveColumns derive(location = concat('(',latitude,',',longitude,')')) ~> LocationColumn"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Crimes_NewTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD type 2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlAdventureWorksLT",
								"type": "DatasetReference"
							},
							"name": "SalesLTProduct",
							"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table') ~> SalesLTProduct",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "AzureSqlAdventureWorksDW",
								"type": "DatasetReference"
							},
							"name": "dboDimProduct",
							"script": "source(output(\n\t\tProductKey as integer,\n\t\tProductAlternateKey as string,\n\t\tProductSubcategoryKey as integer,\n\t\tWeightUnitMeasureCode as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tEnglishProductName as string,\n\t\tSpanishProductName as string,\n\t\tFrenchProductName as string,\n\t\tStandardCost as decimal(19,4),\n\t\tFinishedGoodsFlag as boolean,\n\t\tColor as string,\n\t\tSafetyStockLevel as integer,\n\t\tReorderPoint as integer,\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tWeight as double,\n\t\tDaysToManufacture as integer,\n\t\tProductLine as string,\n\t\tDealerPrice as decimal(19,4),\n\t\tClass as string,\n\t\tStyle as string,\n\t\tModelName as string,\n\t\tLargePhoto as binary,\n\t\tEnglishDescription as string,\n\t\tFrenchDescription as string,\n\t\tChineseDescription as string,\n\t\tArabicDescription as string,\n\t\tHebrewDescription as string,\n\t\tThaiDescription as string,\n\t\tGermanDescription as string,\n\t\tJapaneseDescription as string,\n\t\tTurkishDescription as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table') ~> dboDimProduct",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlAdventureWorksDW",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "setattribute sink(input(\n\t\tProductKey as integer,\n\t\tProductAlternateKey as string,\n\t\tProductSubcategoryKey as integer,\n\t\tWeightUnitMeasureCode as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tEnglishProductName as string,\n\t\tSpanishProductName as string,\n\t\tFrenchProductName as string,\n\t\tStandardCost as decimal(19,4),\n\t\tFinishedGoodsFlag as boolean,\n\t\tColor as string,\n\t\tSafetyStockLevel as integer,\n\t\tReorderPoint as integer,\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tWeight as double,\n\t\tDaysToManufacture as integer,\n\t\tProductLine as string,\n\t\tDealerPrice as decimal(19,4),\n\t\tClass as string,\n\t\tStyle as string,\n\t\tModelName as string,\n\t\tLargePhoto as binary,\n\t\tEnglishDescription as string,\n\t\tFrenchDescription as string,\n\t\tChineseDescription as string,\n\t\tArabicDescription as string,\n\t\tHebrewDescription as string,\n\t\tThaiDescription as string,\n\t\tGermanDescription as string,\n\t\tJapaneseDescription as string,\n\t\tTurkishDescription as string,\n\t\tStartDate as timestamp,\n\t\tEndDate as timestamp,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tProductKey,\n\t\tProductAlternateKey,\n\t\tProductSubcategoryKey,\n\t\tWeightUnitMeasureCode,\n\t\tSizeUnitMeasureCode,\n\t\tEnglishProductName,\n\t\tSpanishProductName,\n\t\tFrenchProductName,\n\t\tStandardCost,\n\t\tFinishedGoodsFlag,\n\t\tColor,\n\t\tSafetyStockLevel,\n\t\tReorderPoint,\n\t\tListPrice,\n\t\tSize,\n\t\tSizeRange,\n\t\tWeight,\n\t\tDaysToManufacture,\n\t\tProductLine,\n\t\tDealerPrice,\n\t\tClass,\n\t\tStyle,\n\t\tModelName,\n\t\tEnglishDescription,\n\t\tFrenchDescription,\n\t\tChineseDescription,\n\t\tArabicDescription,\n\t\tHebrewDescription,\n\t\tThaiDescription,\n\t\tGermanDescription,\n\t\tJapaneseDescription,\n\t\tTurkishDescription,\n\t\tStartDate,\n\t\tEndDate,\n\t\tStatus\n\t)) ~> sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1",
							"script": "dboDimProduct filter(isNull(EndDate)) ~> Filter1"
						},
						{
							"name": "Join1",
							"script": "SalesLTProduct, Filter1 join(ProductID == ProductKey,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1"
						},
						{
							"name": "Select1",
							"script": "Join1 select(mapColumn(\n\t\tProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tListPrice = SalesLTProduct@ListPrice,\n\t\tSize = SalesLTProduct@Size,\n\t\tWeight = SalesLTProduct@Weight,\n\t\tProductCategoryID,\n\t\tProductModelID,\n\t\tSellStartDate,\n\t\tSellEndDate,\n\t\tDiscontinuedDate,\n\t\tThumbNailPhoto,\n\t\tThumbnailPhotoFileName,\n\t\trowguid,\n\t\tModifiedDate,\n\t\tProductKey,\n\t\tProductAlternateKey,\n\t\tProductSubcategoryKey,\n\t\tWeightUnitMeasureCode,\n\t\tSizeUnitMeasureCode,\n\t\tEnglishProductName,\n\t\tSpanishProductName,\n\t\tFrenchProductName,\n\t\tStandardCost = dboDimProduct@StandardCost,\n\t\tFinishedGoodsFlag,\n\t\tColor = dboDimProduct@Color,\n\t\tSafetyStockLevel,\n\t\tReorderPoint,\n\t\tSizeRange,\n\t\tDaysToManufacture,\n\t\tProductLine,\n\t\tDealerPrice,\n\t\tClass,\n\t\tStyle,\n\t\tModelName,\n\t\tLargePhoto,\n\t\tEnglishDescription,\n\t\tFrenchDescription,\n\t\tChineseDescription,\n\t\tArabicDescription,\n\t\tHebrewDescription,\n\t\tThaiDescription,\n\t\tGermanDescription,\n\t\tJapaneseDescription,\n\t\tTurkishDescription,\n\t\tStartDate,\n\t\tEndDate,\n\t\tStatus\n\t))~> Select1"
						},
						{
							"name": "ConditionalSplit1",
							"script": "Select1 split(isNull(ProductAlternateKey),\n\tdisjoint: true) ~> ConditionalSplit1@(newrow)"
						},
						{
							"name": "setattribute",
							"script": "SurrogateKey1 derive(ProductAlternateKey = concat('abcd',toString(ProductAlternateKey)),\n\t\tStatus = 'Y',\n\t\tStartDate = currentDate()) ~> setattribute"
						},
						{
							"name": "SurrogateKey1",
							"script": "ConditionalSplit1@newrow keyGenerate(output(ProductAlternateKey as long),\n\tstartAt: 1L) ~> SurrogateKey1"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlAdventureWorksLT')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlAdventureWorksDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlAdventureWorksLT2017')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlAdventureWorksLT2017_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlAdventureWorksLT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlAdventureWorksLT2017",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[SalesLT].[Product]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlAdventureWorksLT2017')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlAdventureWorksDW2017')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlAdventureWorksDW2017_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlAdventureWorksDW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlAdventureWorksDW2017",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "EnglishProductName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishProductName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeRange",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "DealerPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "LargePhoto",
						"type": "varbinary"
					},
					{
						"name": "EnglishDescription",
						"type": "nvarchar"
					},
					{
						"name": "FrenchDescription",
						"type": "nvarchar"
					},
					{
						"name": "ChineseDescription",
						"type": "nvarchar"
					},
					{
						"name": "ArabicDescription",
						"type": "nvarchar"
					},
					{
						"name": "HebrewDescription",
						"type": "nvarchar"
					},
					{
						"name": "ThaiDescription",
						"type": "nvarchar"
					},
					{
						"name": "GermanDescription",
						"type": "nvarchar"
					},
					{
						"name": "JapaneseDescription",
						"type": "nvarchar"
					},
					{
						"name": "TurkishDescription",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[DimProduct]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlAdventureWorksDW2017')]"
			]
		}
	]
}